{"version":3,"sources":["components/Bulb.jsx","components/Orbit.jsx","components/Background.jsx","components/Floor.jsx","state.js","components/ColorPicker.jsx","components/BoundingBox.jsx","components/Model.jsx","components/Dragable.jsx","components/Cars.jsx","components/CameraControls.jsx","components/CameraButtons.jsx","components/Lights.jsx","components/Effects.jsx","App.js","reportWebVitals.js","index.js"],"names":["Bulb","props","ref","useRef","scene","useThree","useEffect","lights","push","castShadow","shadow-mapSize-height","shadow-mapSize-width","shadow-radius","args","emissive","extend","OrbitControls","Orbit","camera","gl","attach","domElement","Background","texture","useLoader","THREE","formatted","useMemo","image","height","fromEquirectangularTexture","object","Floor","useBox","receiveShadow","transparent","opacity","state","activeMesh","activeMeshName","cameraPos","target","shouldUpdate","ColorPicker","handleClick","e","material","color","style","background","position","zIndex","left","right","margin","width","display","top","onClick","BoundingBox","offset","dims","visible","children","mass","api","scale","wireframe","Model","mixer","model","GLTFLoader","process","path","animations","length","forEach","clip","clipAction","play","useFrame","delta","update","traverse","child","isMesh","side","DragControls","Dragable","groupRef","controlsRef","useState","setChildren","current","addEventListener","orbitControls","enabled","set","copy","velocity","transformGroup","Cars","fallback","Array","fill","rotation","Math","PI","trasformGroup","CameraControls","name","getObjectByName","lerp","clone","sub","bottom","textAlign","borderRadius","fontSize","fontWeight","border","cursor","CameraButtons","sets","1","2","num","Lights","intensity","Effects","setLights","focusDistance","focalLength","bokehScale","luminanceThreshold","luminanceSmoothing","map","light","sun","uuid","eskil","darkness","App","powerPreference","antialias","stencil","depth","shadows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13e93d38.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\nimport { useThree } from \"@react-three/fiber\";\n\nconst Bulb = (props) => {\n  const ref = useRef();\n  const { scene } = useThree();\n  useEffect(() => {\n    if (scene.lights) scene.lights.push(ref);\n    else scene.lights = [ref];\n  }, [scene]);\n  return (\n    <mesh {...props} ref={ref}>\n      <pointLight\n        castShadow\n        shadow-mapSize-height={2 ** 10}\n        shadow-mapSize-width={2 ** 10}\n        shadow-radius={11}\n      />\n      <sphereBufferGeometry args={[0.2, 20, 20]} />\n      <meshPhongMaterial emissive=\"white\" />\n    </mesh>\n  );\n};\n\nexport default Bulb;\n","import { extend, useThree } from \"@react-three/fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nextend({ OrbitControls });\n\nconst Orbit = () => {\n  const { camera, gl } = useThree();\n  return (\n    <orbitControls attach=\"orbitControls\" args={[camera, gl.domElement]} />\n  );\n};\n\nexport default Orbit;\n","import { useLoader, useThree } from \"@react-three/fiber\";\nimport * as THREE from \"three\";\nimport { useMemo } from \"react\";\n\nconst Background = (props) => {\n  const texture = useLoader(THREE.TextureLoader, \"/shopPanorama.jpeg\");\n\n  //   const texture = useLoader(\n  //     THREE.TextureLoader,\n  //     process.env.PUBLIC_URL + \"/shopPanorama.jpeg\"\n  //   );\n\n  const { gl } = useThree();\n  const formatted = useMemo(\n    () =>\n      new THREE.WebGLCubeRenderTarget(\n        texture.image.height\n      ).fromEquirectangularTexture(gl, texture),\n    [texture]\n  );\n  //   const formatted = new THREE.WebGLCubeRenderTarget(\n  //     texture.image.height\n  //   ).fromEquirectangularTexture(gl, texture);\n  //   const formatted = new THREE.WebGLCubeRenderTarget(\n  //     texture.image.height\n  //   ).fromEquirectangularTexture(gl, texture);\n  return <primitive attach=\"background\" object={formatted.texture} />;\n\n  return <primitive attach=\"background\" object={formatted} />;\n};\n\nexport default Background;\n","import { useBox } from \"@react-three/cannon\";\nconst Floor = (props) => {\n  const [ref, api] = useBox(() => ({ args: [20, 1, 10], ...props }));\n  return (\n    <mesh ref={ref} {...props} receiveShadow>\n      <boxBufferGeometry args={[200, 1, 200]} />\n      <meshPhysicalMaterial transparent opacity={0.4} />\n    </mesh>\n  );\n};\n\nexport default Floor;\n","import * as THREE from \"three\";\n\nconst state = {\n  activeMesh: {},\n  activeMeshName: \"Capot001_CAR_PAINT_0\",\n  cameraPos: new THREE.Vector3(7, 7, 7),\n  target: new THREE.Vector3(4, 0, 0),\n  shouldUpdate: false,\n};\n\nexport default state;\n","import * as THREE from \"three\";\nimport state from \"../state\";\n\nconst ColorPicker = (props) => {\n  const handleClick = (e) => {\n    if (!state.activeMesh) return;\n    state.activeMesh.material.color = new THREE.Color(\n      e.target.style.background\n    );\n  };\n  // const handleClick = (e) => {\n  //   if (!window.activeMesh) return;\n  //   window.activeMesh.material.color = new THREE.Color(\n  //     e.target.style.background\n  //   );\n  // };\n  return (\n    <div\n      style={{\n        position: \"absolute\",\n        zIndex: 1,\n        left: 0,\n        right: 0,\n        margin: \"auto\",\n        width: \"fit-content\",\n        display: \"flex\",\n        top: \"20px\",\n      }}\n    >\n      <div\n        onClick={handleClick}\n        style={{\n          background: \"blue\",\n          height: 50,\n          width: 50,\n        }}\n      ></div>\n      <div\n        onClick={handleClick}\n        style={{\n          background: \"yellow\",\n          height: 50,\n          width: 50,\n        }}\n      ></div>\n      <div\n        onClick={handleClick}\n        style={{\n          background: \"white\",\n          height: 50,\n          width: 50,\n        }}\n      ></div>\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import { useBox } from \"@react-three/cannon\";\n\nconst BoundingBox = ({\n  position = [0, 0, 0],\n  offset = [0, 0, 0],\n  dims = [1, 1, 1],\n  visible = false,\n  children,\n}) => {\n  const [ref, api] = useBox(() => ({\n    mass: 1,\n    args: dims,\n    position: position,\n  }));\n  return (\n    <group ref={ref} api={api}>\n      <mesh scale={dims} visible={visible}>\n        <boxBufferGeometry />\n        <meshPhysicalMaterial wireframe />\n      </mesh>\n      <group position={offset}>{children}</group>\n    </group>\n  );\n};\n\nexport default BoundingBox;\n","import { useLoader, useFrame } from \"@react-three/fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport * as THREE from \"three\";\n// small change\nconst Model = (props) => {\n  const model = useLoader(GLTFLoader, process.env.PUBLIC_URL + props.path);\n  // const model = useLoader(GLTFLoader, process.env.PUBLIC_URL + props.path);\n\n  let mixer;\n  if (model.animations.length > 0) {\n    mixer = new THREE.AnimationMixer(model.scene);\n    model.animations.forEach((clip) => {\n      const action = mixer.clipAction(clip);\n      action.play();\n    });\n  }\n\n  useFrame((scene, delta) => {\n    mixer?.update(delta);\n  });\n\n  model.scene.traverse((child) => {\n    if (child.isMesh) {\n      child.castShadow = true;\n      child.receiveShadow = true;\n      child.material.side = THREE.FrontSide;\n    }\n  });\n\n  // return <primitive object={model.scene} />;\n  return <primitive object={model.scene} scale={props.scale} />;\n};\n\nexport default Model;\n","import { DragControls } from \"three/examples/jsm/controls/DragControls\";\nimport { useRef, useEffect, useState } from \"react\";\nimport { useThree, extend } from \"@react-three/fiber\";\nextend({ DragControls });\n\nconst Dragable = (props) => {\n  const groupRef = useRef();\n  const controlsRef = useRef();\n  const [children, setChildren] = useState([]);\n  const { camera, gl, scene } = useThree();\n\n  useEffect(() => {\n    setChildren(groupRef.current.children);\n  }, []);\n\n  useEffect(() => {\n    controlsRef.current.addEventListener(\n      \"hoveron\",\n      (e) => (scene.orbitControls.enabled = false)\n    );\n    controlsRef.current.addEventListener(\n      \"hoveroff\",\n      (e) => (scene.orbitControls.enabled = true)\n    );\n    controlsRef.current.addEventListener(\"dragstart\", (e) => {\n      e.object.api?.mass.set(0);\n    });\n    controlsRef.current.addEventListener(\"dragend\", (e) =>\n      e.object.api?.mass.set(1)\n    );\n    controlsRef.current.addEventListener(\"drag\", (e) => {\n      e.object.api?.position.copy(e.object.position);\n      e.object.api?.velocity.set(0, 0, 0);\n    });\n  }, [children]);\n\n  return (\n    <group ref={groupRef}>\n      <dragControls\n        transformGroup={props.transformGroup}\n        ref={controlsRef}\n        args={[children, camera, gl.domElement]}\n      />\n      {props.children}\n    </group>\n  );\n};\n\nexport default Dragable;\n","import { Suspense } from \"react\";\nimport BoundingBox from \"./BoundingBox\";\nimport Model from \"./Model\";\nimport Dragable from \"./Dragable\";\n\nconst Cars = ({}) => {\n  return (\n    <Suspense fallback={null}>\n      <Dragable transformGroup>\n        <BoundingBox\n          position={[4, 4, 0]}\n          dims={[3, 2, 6]}\n          offset={[0, -0.4, 0.8]}\n        >\n          <Model\n            path=\"/tesla_model_3/scene.gltf\"\n            scale={new Array(3).fill(0.01)}\n          />\n        </BoundingBox>\n      </Dragable>\n      <Dragable>\n        <BoundingBox\n          position={[-4, 4, 0]}\n          dims={[3, 2, 7]}\n          offset={[0, -0.8, 0.2]}\n        >\n          <Model\n            path=\"/tesla_model_s/scene.gltf\"\n            scale={new Array(3).fill(0.013)}\n          />\n        </BoundingBox>\n      </Dragable>\n      <group rotation={[0, Math.PI, 0]}>\n        <Model path=\"/mech_drone/scene.gltf\" scale={new Array(3).fill(0.01)} />\n      </group>\n      {/* <group rotation={[0, Math.PI, 0]}> */}\n      <Dragable trasformGroup>\n        {/* <BoundingBox\n          position={[0, 0, 0]}\n          dims={[2, 1.5, 1]}\n          offset={[0, -0.8, 0]}\n          visible\n        > */}\n        <group position={[-8, 0, 0]} rotation={[0, (3 * Math.PI) / 2, 0]}>\n          <Model path=\"/bicycle/scene.gltf\" scale={new Array(3).fill(0.01)} />\n        </group>\n        {/* </BoundingBox> */}\n      </Dragable>\n      {/* </group> */}\n    </Suspense>\n  );\n};\n\nexport default Cars;\n","import { useFrame } from \"@react-three/fiber\";\nimport state from \"../state\";\n\nconst CameraControls = ({}) => {\n  useFrame(({ camera, scene }) => {\n    if (state.activeMesh.name !== state.activeMeshName) {\n      state.activeMesh = scene.getObjectByName(state.activeMeshName) || {};\n    }\n    if (state.shouldUpdate) {\n      camera.position.lerp(state.cameraPos, 0.1);\n      scene.orbitControls.target.lerp(state.target, 0.1);\n      scene.orbitControls.update();\n      const diff = camera.position.clone().sub(state.cameraPos).length();\n      if (diff < 0.1) state.shouldUpdate = false;\n    }\n  });\n\n  //   if (state.shouldUpdate) {\n  //     camera.position.lerp(state.cameraPos, 0.1);\n  //     scene.orbitControls.target.lerp(state.target, 0.1);\n  //     scene.orbitControls.update();\n\n  //   }\n  // });\n  return null;\n};\n\nexport default CameraControls;\n","import state from \"../state\";\n\nconst style = {\n  zIndex: 1,\n  position: \"absolute\",\n  bottom: \"30vh\",\n  // left: '40vw',\n  height: \"30px\",\n  width: \"30px\",\n  background: \"white\",\n  textAlign: \"center\",\n  borderRadius: \"100%\",\n  fontSize: 20,\n  fontWeight: \"bold\",\n  opacity: 0.7,\n  border: \"1px solid black\",\n  cursor: \"pointer\",\n};\n\nconst CameraButtons = ({}) => {\n  const sets = {\n    // model_3\n    1: {\n      cameraPos: [9, 2, 4],\n      target: [4, 0, 0],\n      name: \"Capot001_CAR_PAINT_0\",\n    },\n    // model_s\n    2: {\n      cameraPos: [1, 2, 5],\n      target: [-4, 0, 0],\n      name: \"object005_bod_0\",\n    },\n  };\n\n  const handleClick = (num) => {\n    state.cameraPos.set(...sets[num].cameraPos);\n    state.target.set(...sets[num].target);\n    state.activeMeshName = sets[num].name;\n    state.shouldUpdate = true;\n  };\n  return (\n    <>\n      <button\n        onClick={(e) => handleClick(2)}\n        style={{\n          left: \"40vw\",\n          ...style,\n        }}\n      >\n        {\"<\"}\n      </button>\n      <button\n        onClick={(e) => handleClick(1)}\n        style={{\n          right: \"40vw\",\n          ...style,\n        }}\n      >\n        {\">\"}\n      </button>\n    </>\n  );\n};\n\nexport default CameraButtons;\n","import Bulb from \"./Bulb\";\n\nconst Lights = ({}) => {\n  return (\n    <>\n      <ambientLight intensity={0.2} />\n      <directionalLight\n        // shadow-mapSize-height={2**10}\n        // shadow-mapSize-width={2**10}\n        // shadow-radius={10}\n        intensity={0.5}\n        position={[6, 3, 0]}\n        // castShadow\n      />\n      <Bulb position={[-6, 3, 0]} />\n      <Bulb position={[0, 3, 0]} />\n      <Bulb position={[6, 3, 0]} />\n    </>\n  );\n};\n\nexport default Lights;\n","import {\n  EffectComposer,\n  DepthOfField,\n  GodRays,\n  Noise,\n  Vignette,\n  Bloom,\n} from \"@react-three/postprocessing\";\nimport { useState, useEffect } from \"react\";\nimport { useThree } from \"@react-three/fiber\";\n\nconst Effects = () => {\n  const [lights, setLights] = useState(null);\n  const { scene } = useThree();\n  useEffect(() => {\n    if (scene.lights && scene.lights.length === 3) setLights(scene.lights);\n  }, [scene.lights]);\n  return lights ? (\n    <EffectComposer>\n      <DepthOfField\n        focusDistance={0}\n        focalLength={0.03}\n        bokehScale={3}\n        height={480}\n      />\n      <Bloom luminanceThreshold={0.9} luminanceSmoothing={0.99} height={480} />\n      {lights.map((light) => (\n        <GodRays key={light.current.uuid} sun={light.current} />\n      ))}\n      <Noise opacity={0.02} />\n      <Vignette eskil={false} offset={0.1} darkness={1.1} />\n    </EffectComposer>\n  ) : null;\n};\n\nexport default Effects;\n","import \"./App.css\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { Physics } from \"@react-three/cannon\";\nimport Bulb from \"./components/Bulb\";\nimport Orbit from \"./components/Orbit\";\nimport Background from \"./components/Background\";\nimport Floor from \"./components/Floor\";\nimport React, { Suspense } from \"react\";\nimport ColorPicker from \"./components/ColorPicker\";\n\nimport Cars from \"./components/Cars\";\nimport CameraControls from \"./components/CameraControls\";\nimport CameraButtons from \"./components/CameraButtons\";\nimport Lights from \"./components/Lights\";\nimport {\n  Bloom,\n  DepthOfField,\n  EffectComposer,\n  Noise,\n  Vignette,\n} from \"@react-three/postprocessing\";\nimport Effects from \"./components/Effects\";\n\nfunction App() {\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\n      <ColorPicker />\n      <CameraButtons />\n      <Canvas\n        gl={{\n          powerPreference: \"high-performance\",\n          antialias: false,\n          stencil: false,\n          depth: false,\n        }}\n        shadows\n        style={{ background: \"black\" }}\n        camera={{ position: [7, 7, 7] }}\n      >\n        <CameraControls />\n        {/* <fog attach=\"fog\" args={[\"white\", 1, 10]} /> */}\n        <Lights />\n\n        <Orbit />\n        <axesHelper args={[5]} />\n        <Bulb position={[-6, 3, 0]} />\n        <Bulb position={[0, 3, 0]} />\n        <Bulb position={[6, 3, 0]} />\n        <Physics>\n          <Cars />\n          <Floor position={[0, -0.5, 0]} />\n        </Physics>\n        <Effects />\n        <Suspense fallback={null}>\n          <Background />\n        </Suspense>\n      </Canvas>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}